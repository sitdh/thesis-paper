%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 416.250000 600.250000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 417 601
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 417 601
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Thonburi
%!FontType1-1.0: Thonburi 1.0000.1.0000
14 dict begin/FontName /Thonburi def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /e put
dup 35 /l put
dup 36 /c put
dup 37 /t put
dup 38 /i put
dup 39 /n put
dup 40 /g put
dup 41 /space put
dup 42 /s put
dup 43 /p put
dup 44 /a put
dup 45 /h put
dup 46 /D put
dup 47 /b put
dup 48 /G put
dup 49 /r put
dup 50 /f put
dup 51 /o put
dup 52 /m put
dup 53 /A put
dup 54 /y put
dup 55 /z put
dup 56 /d put
dup 57 /u put
dup 58 /I put
dup 59 /C put
dup 60 /R put
dup 61 /T put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2560 -1531 1 index div -1463 2 index div 3957 3 index div 3585 5 -1 roll div]cvx def
/sfnts [<


01F4303121231121321E0115140E01071E02170121012627233533323E0135342E01232101B4FC0258DDDF82589FA63F3E5A220135FEDFFEF3619DFFF79CA15F4B91AEFEF707947FF28D72D0A942233F8C3DFDC201FEB98BC260B8695B90610000010088FFC505AF07CE0032012FB800332FB800082F410500EA000800FA000800025D41110069000800790008008900080099000800A9000800B9000800C9000800D9000800085DB8003310B80011D0B800112FB900210006F441110066002100760021008600210096002100A6002100B6002100C6002100D6002100085D410500E5002100F5002100025DB8000810B9002A0006F4B80034DC00B800004558B800142F1BB90014000D3E59B800004558B8002E2F1BB9002E00073E59B900050001F441110067000500770005008700050097000500A7000500B7000500C7000500D7000500085D410500E6000500F6000500025DB8001410B900180004F4B8001410B9001E0001F4410500E9001E00F9001E00025D41110068001E0078001E0088001E0098001E00A8001E00B8001E00C8001E00D8001E00085D30311333151416333236353427262F012E023534002120161D012335342E0123220615141E011F0104171615140204232224263588FDE3BDA5E06061C465CECC640137014B0130F8FD4C995BBAB35595B077011D605F9BFEEDE5D9FEDD9801B40CA17FC19D805150502955A7CA7DDC012FE1960D0D2F5D29BA77508D5D4D347B89889D93FEEF8E68EE8D0000000001002700000640079400070041BB00070006000000042B00B800004558B800032F1BB90003000D3E59B800004558B800002F1BB9000000073E59B8000310B900010001F4B80005D0B80006D03031211121352115211102BBFD6C0619FD7606D1C3C3F92F00000000020088FFD9050A059C0022002F0140B800302FB8002F2FB80002D0B8003010B80008D0B800082FB8002F10B8000CD0B8000810B900270006F441110066002700760027008600270096002700A6002700B6002700C6002700D6002700085D410500E5002700F5002700025DB80013D0B800132FB8000810B80015D0B800152FB8002F10B9001F0005F4B80031DC00B800004558B8001A2F1BB9001A000B3E59B800004558B800002F1BB9000000073E59B800004558B800052F1BB9000500073E59BA00020005001A111239B8001A10B900100002F4410500E9001000F9001000025D41110068001000780010008800100098001000A8001000B8001000C8001000D8001000085DB8000510B9002B0002F441110067002B0077002B0087002B0097002B00A7002B00B7002B00C7002B00D7002B00085D410500E6002B00F6002B00025DBA00220005002B11123930312126350E0123222635342425373534262322061D01233534362433321E011511

00B800002FB800004558B8000F2F1BB9000F000B3E59B800004558B800022F1BB9000200073E59B800004558B800082F1BB9000800073E59BA000400080000111239BA001300080000111239B8000F10B900170001F4410500E9001700F9001700025D41110068001700780017008800170098001700A8001700B8001700C8001700D8001700085DB8000810B9001D0001F441110067001D0077001D0087001D0097001D00A7001D00B7001D00C7001D00D7001D00085D410500E6001D00F6001D00025D303101331123350E022322240235100021321E0117113402232202111016333236120478E8E84787A9539DFEF794013401135A9D7C4ACDB9AAE1D9AC6FBF5E07E2F81EF387692AAE0159D7013F01A5336582FE3AED0131FEF2FEF4FEC6F487010700000000020074FFD9053A059B0018002100F5B800222FB8001A2FB80000D0B800002FB8001A10B900100005F4B80001D0B800012FB8002210B80009D0B800092FB900120005F4B80019D0B800192FB8001010B80023DC00B800004558B8000C2F1BB9000C000B3E59B800004558B800062F1BB9000600073E59BB001A0002001100042BB8000610B900000004F4B8000610B900150001F441110067001500770015008700150097001500A7001500B7001500C7001500D7001500085D410500E6001500F6001500025DB8000C10B9001F0001F4410500E9001F00F9001F00025D41110068001F0078001F0088001F0098001F00A8001F00B8001F00C8001F00D8001F00085D3031013315140E0123200011100021320412111521141233323635012135342E012322060448E994F29EFEC2FEA5016F01209F010296FC20F2D59A8DFD2102F25EA56E82DC01670D5CC164019D013B014201A889FEDCFEFC4DE0FEDE774801F21B62B858D00001006A000003C907E200150088BB00000005000100042BB8000110B80005D0B8000010B80011D000B800004558B800042F1BB90004000B3E59B800004558B800122F1BB90012000B3E59B800004558B800002F1BB9000000073E59BB00090001000E00042BB8000410B900020001F4B8000910B8000BD0B8000B2FB8000E10B8000CD0B8000C2FB8000210B80014D0B80015D0303121231123353335102433321715262322061D01211521021FE9CCCC0100CF4D77623A719D0197FE6904B3C1410130FD12BE0D6ED06DC100020074FDB90560059B0022002F0189B800302FB800002FB8003010B80006D0B800062FB8000010B8000DD0B8000010B900100005F4B8000610B900290005F441110066002900760029008600290096002900A6002900B6002900C6002900D6002900085D410500E5002900F5002900025DB8001AD0B8001A2FB8000010B80023D0B8001010B80031DC00B800004558B8000E2F1BB9000E000B3E59B800004558B8000A
2F1BB9000A000B3E59B800004558B800142F1BB9001400093E59B800004558B800032F1BB9000300073E59BA00000014000A111239BA000D0014000A111239B8001410B9001E0002F441110067001E0077001E0087001E0097001E00A7001E00B7001E00C7001E00D7001E00085D410500E6001E00F6001E00025DB8000A10B900260001F4410500E9002600F9002600025D41110068002600780026008800260098002600A8002600B8002600C8002600D8002600085DB8000310B9002D0001F441110067002D0077002D0087002D0097002D00A7002D00B7002D00C7002D00D7002D00085D410500E6002D00F6002D00025D3031010E012322001134122433321617353311100204232224263D013315141633323E011901340223220215141E01333212047847E49CF9FEBC910107B083D069E8B4FEECBAADFEEF8FE9C8997DB36DE6A0AAE15ABF6DB0DB012793940187013FD20159AA689EDFFB8BFE52FEED8567B36015145C7057C101000264E00115FEE8FDA0F07C01370000000100B80000053007E2001700B6B800182FB8000E2FB8001810B80001D0B800012FB900000005F4B80003D0B8000E10B9000D0005F4BA00040001000D111239B80019DC00B800022FB800004558B800082F1BB90008000B3E59B800004558B800002F1BB9000000073E59B800004558B8000D2F1BB9000D00073E59BA000400000002111239B8000810B900130003F4410500E9001300F9001300025D41110068001300780013008800130098001300A8001300B8001300C8001300D8001300085D303121231133113E0233321E0115112311342E0123220E011501A0E8E84A8B975D83D173E9328C5A66B97007E2FCA1726E386BD1E6FC870315BB9D5878D7C8000000000200B8000001A0079400030007005ABB00010005000000042BB8000010B80004D0B8000110B80006D000B800004558B800002F1BB90000000B3E59B800004558B800052F1BB90005000D3E59B800004558B800022F1BB9000200073E59B8000510B900040004F430311333112311353315B8E8E8E80574FA8C06AAEAEA0000000100B8000001A007E200030022BB00000005000100042B00B800022FB800004558B800002F1BB9000000073E5930312123113301A0E8E807E20000000100B80000084C059B002A00FFBB00000005000100042BBB00200005002100042BBB00150005001600042BB8000010B80003D0BA000400010015111239BA000C00010015111239B8001510B8002CDC00B800004558B800022F1BB90002000B3E59B800004558B800082F1BB90008000B3E59B800004558B800102F1BB90010000B3E59B800004558B800002F1BB9000000073E59B800004558B800152F1BB9001500073E59B800004558B800202F1BB9002000073E59BA000400000008111239BA000C

B800002F1BB9000000093E59B800004558B8000F2F1BB9000F00073E59BA000400000008111239BA001300000008111239B900170001F441110067001700770017008700170097001700A7001700B7001700C7001700D7001700085D410500E6001700F6001700025DB8000810B9001D0001F4410500E9001D00F9001D00025D41110068001D0078001D0088001D0098001D00A8001D00B8001D00C8001D00D8001D00085D303101231133153E023332041215100021222E012711141233321211102623220602018EE9E94883A558A0010992FECEFEEC599F7A4BCDBAAAE1EE986EBF5FFDE10793F27C6637AEFEA7D7FEC2FE5A34658201C6EEFECF010E010D013AF385FEF80000000100B8000003C9059B001000A9BB00000005000100042BB8000010B80003D000B800004558B800022F1BB90002000B3E59B800004558B8000A2F1BB9000A000B3E59B800004558B800082F1BB90008000B3E59B800004558B800002F1BB9000000073E59BA000400000008111239BA000B00000008111239B8000810B9000D0003F4410500E9000D00F9000D00025D41110068000D0078000D0088000D0098000D00A8000D00B8000D00C8000D00D8000D00085D303121231133153E0233321715262322061101A0E8E83A889A504835535C83F70574F66A763D15F128E6FEDB00000000010062FFD904A5059B003000FDB800312FB800172FB8003110B8000FD0B8000F2FB9001E0005F441110066001E0076001E0086001E0096001E00A6001E00B6001E00C6001E00D6001E00085D410500E5001E00F5001E00025DB8001710B900290006F4B80032DC00B800004558B800122F1BB90012000B3E59B800004558B8002C2F1BB9002C00073E59B900050001F441110067000500770005008700050097000500A7000500B7000500C7000500D7000500085D410500E6000500F6000500025DB8001210B900160004F4B8001210B9001B0001F4410500E9001B00F9001B00025D41110068001B0078001B0088001B0098001B00A8001B00B8001B00C8001B00D8001B00085D3031133315141633323635342F03243534242120161D01233534262322061514161F021E01171E0115140021222E013562E88AA390B3AF774FA1FEEC010B01080104DCEA8D758C9560727052AA532B3B38FEE4FEF0ADE3870171055A778C5F813624193265EBA5FAD6820505465074554151211F183028202D7F55C6FEF267B577000000010058FFD9040E06BE001700B0BB00120005000700042BB8000710B8000BD0B8001210B8000DD000B8000C2FB800004558B8000A2F1BB9000A000B3E59B800004558B8000E2F1BB9000E000B3E59B800004558B800032F1BB9000300073E59BA00000003000C111239B8000E10B900080001F4B80009D0B80010D0B80011D0B8000310B9001600


00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/C 3 def
/D 4 def
/G 5 def
/I 6 def
/R 7 def
/S 8 def
/T 9 def
/a 10 def
/b 11 def
/c 12 def
/d 13 def
/e 14 def
/f 15 def
/g 16 def
/h 17 def
/i 18 def
/l 19 def
/m 20 def
/n 21 def
/o 22 def
/p 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/y 28 def
/z 29 def
/luthai_saraaathai 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.000390625 0 0 0.000390625 0 0 ] def
/FontBBox{-1531 -1463 3957 3585}def
/UniqueID 4158355 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9310E889D4B294081CFBE92AFCC7FE3BB36C58496644FE561335DE14721F84E30EC75257F5B6C60BCF3B322F36DE53FB807C09F2622F6AFD800F548EBBF845E3A0D21F11D5B3BE3BE7AB61AC6C2AD6FE0AFD65C55C50E21E95B104E2ABD763F0ACA53C1062458523DF78B8DA73B3693057AB00FDC541894BB85262B4226A4960D7C37B1199944090FB6BAB3193563806D4C975A69A14626B1FC4B6EAFAC5D43343432A0C4440A76085AFED1B8051E1EB92AD9BCF858D181376BEB59525E981565B519FD1359AE478E56C5936597186BFD7AE436F930D0B6A67CBB78603676730F4D7C3F3F9A37EE011D8524B169E356470C68F0E87DD1BA010C0F7548E5F7198ECCA8DF5BCF0EC820F256CF02E9D7AABB88533BA833289B7C2B361F825A9FB46F6E8FF63399498EB3051827305C2824910C3E0EF3E532DA4B206970B859C677ED232A3191779629852C5F95E112B6C7699731713970AF6AEFB96B29F76FDB91BAE2D6A3BD82E32356042430346D545C821592376CBAE7A00EA30921E582B477FF062F625E1088BD1F8317D38F17A7F80B1E0B9421BDC8094DD81A69FAFBCF478B07D5AD18B7648D52C087DF9E7F3B7F63393FF85097F34ABA461AF0C4CB267A88DB15EC36EC5B5ED2AA6F29BAE1D04DCF68ACDE4F845DF11C928097C876394674EDE436D1FE41D2ECB6C40C57050236B47CECC07F8279610479118E0B3AEEABCA4C6A202BF0C907EC8359395C1F5A2E4228548A33EE536F2FA1F495B8D76779681

90F6F2A78D22859569A00C0AD1994C68998425E75BBAD5D6595757D098E58C765B7846944D7E8186D822A96AEE2180ADEEAB9CF0A093E400465E7FD8126E554BD9DA339137CAD68D1B509C386CECDFF68D0294D28CC7661C5B7952D18CB697529C14DA3A3CBB1EC226A2EF349B24382E6D462549A747721719ACC8A30B43A7B4104231B2485AA20B7CD9F09711A45C1A0E221118820454D7BF925357353A707EA6BDF8292ADF3141408EB75B18AE42882493FFC6B62546B532A8205A050F163B6DDE6EB873EEC7CA421E9ED34B690521F930A32D8A5A60057DD06B1B8356ED2DD14D24416C791A0187650063BA91238FD16F78A6575B5B8BE737E2BB9617637D8D2E5243E75A7C8F389BCFF5AE2CA3CE46A96AB6F910459BEA2096D9B8B212B3F12A190B9275256035B21551DF7AFD1C86AEE25F66E30ED407D481258F64FB6DD78A611716C645473CF73B51F856E3010EFFE16D11860939271D00055F57EA5C830A02D8AD5384E0A0D68CA173C0D46C94CB1DFC832C390F604E4D870D6A205464EEC077631488A6DE93B688A8FDEDDA7573B5F81B08094979A083D290B13E11C81E04AA82A800A34AC317E44D9BD4958467AE8AE93DB4D25E0CDB6940600C59560241C3D6F20CBEFB2B7C7C510592E1CCD5BA50CD3CC93AD30240EED698ADC85971630A9314FA9F52DB7788EE2D4D6D642118CC611E8435197CDF6F2AEC09B0DAD3D60F65AD578B3916B6664F0E6BC4D1C8925197A5D67FDEFD861AEC78FA23D1524C8CB66672341DE85AD36FA5BDE0B0C7BD74B63E0ACA2D13A9C749D530E8600E0285C345C6AB2D376367269FB3B6A731CF81E5EAAE393A8C7ED92E97286F9B6705AAFA8A6C2A3544CAB7DF329FE5887C23A012ADFC8C092B39999069A4BBA699B5797916CAA7D3A0620804620FC8A54674A7529744A921A966FBB2E7CB68B766E926CE72908E0A1AED2D4B58B168CBAC640943D9E719205E1785F6EE73C8E11546BA0175709CCA7041A9362E8840F8D2C63F919EAF8CE84A2FAFB04C4E4C209499E084D50F98C9F1DCB592C7AACE6C23299CE30028B662BBD672CF3B02F7EFF6E9F96EF79303A39A911AD78BA62A447BE82887F558ACF9DAE23D4EDB29268BB10096C50718400675041484C9FBE284C221C09B112172994F924462E6C0058E8FAAE60625A4229B548AB6FB5A3D11D806694F34B148D30D7994C77C2A05167B66C4D10539ED4A4B2C1A7C124A1F30C2B5A8A92E41998B003067350BB5E3B5447FEDCC9D7CCCFF268C82041C216E7E72B9EFBFC2CEBB33B7F8B8D8C2FF183435D796ADF591098B4AAFAE24A712D83EA8CE6D2EB6116A699273650C99D89B9D415538340364A8555C12678606278083C63616EB87F5E85ECFF9ED7760CA363BF779C045C94C3DF700AF07BC3FD11C91689A71DF2767B874C0CFBAEFA5328578

8B92F7BE4F08C4C82F994D2E9A69A970BACA81DE2B60BE69419E705E3E2C5E0E8134D076440E4946FEEA80CFB9192F3B8BC7A4D199CAFBD059E4135FA71F0C854E0C9ED1C4EA93E647735B60BB6E5D5ABA97857A92B8B347DF7182FD06902533C60F0D4367619300D36C58A8FA2928277EBEA2D9ABB0BAE64C693C582297434B470987A8D75B8987C0E0663708B7A4206AE6E968154B83070F31DCFDAD37B6E4B570807F31C8F65695EA635CDBA66F37E72271DE92EDEF4001021689C689A7189E118B734E866FC99B1A78EE3015AE9F9D108D6B1963A414E6702FBEDA44ADDC00C46C27036697567E7024BA344505810B0D735F16052BFD0E42FBA1B9D7490B6B1050F015D9FCE272ED8E2E16732E31873EC1971ED07665DDFD5093B2498F69EFC7DC378DA40908DE7B1BCA0888C208F1D847E2530AF70D9100E19E46E417217FBD299CEDBC1E0AE4F2570BBAE0329BDCD01D9C02CB2186A3F34CE46A68E7BFB578157FF9CA3BDE243697B5453BCD1299B4A252BD0D5E4AA173049D6B95FF82E018A66573B1A70114E8CBBFADAC50D0C71106DB5A90A0D1345424E12C87216B11B8383B90258D5653CFC775ED3C86406D8DE64966147CA79B90E1FE8D154593909CC2787292AFA643F64BFECAB7532433CBD25AA72499E57BD0B6385BF0825AB38AA85EDB4829ABFCA30F9FBF6C2C3C4603CF20CB8C4BBF6B8D7CA21992FACACAC8A755A9CBBE8E5FC1B3EFE76DD7DA91320D000A90A990D598D01C533B30B9CE0D7679A5FC54550AA5717F922DB51FA17BDC6BE941EA1870FBAE4FC64A18103D4E98EC64A6BED2A5D69843DFAD8C5841239617F6086E0CC227389D7CE64235B98D50CD27037126766CD6795039DB09531F9DF97D26CB7A3AFAEC33BC6A0E51E8FDB08BC2F19077C978EB039C55408CF38C112093ED92EEF52820F5EA4CA652F9E141D60B094C12B747C9A42A1B9F8A1E8BB92D7724AB505038D2152CCDD186671F1271A36403D57C64CC7824A24F7B1762393D0E8FDFB0B4DB55CEB72E721C8670F0382367DF2282E85A3DDF044A26B7EF9CF58C2E1A7B10298655079844921F9714E7227D14B5CF7D5CB8883320A5DF2EA1B25B1035A8FD07D76E303B29D0273680422B0DA3BE51066C81C3D03129BF1F73F4C54C79CFAAE978BC48BA48208A950AEDF620C64467949A55500CDBBE1FB343AFB8940AE3BA97B3118F34EE7E4DF698AC5006776FB74EE2954BB98D22805A075CAE6FEEE67CF82089D30353A961BB4B542DDDAB91D164B795E63F2CE8B6812B531B0C2C864A2793C4FBC975702930C08FFF45E41F2E9E0B6E3B475735CE8F43C0AA8D1D10CF4F6C3820C6209D09DE652A15231F95312C8A46C62B645199DD1CC8A1FA163E3FE9B5E8303A3E118DD3D2CC20E84DD30FC3A00DD9C076262865FD55C14252CCF079FE71E67681C2
90B50909A950BF6CADFAC721140564C8C679FD6DEEBDF0C5805573C3D6C1440032A1B2E84E18F9D1C1D70D9C266C9077B10C91B2264E94832864121A594FC900799A8300428F5F5636CC6F9F9B98F6F1F8B3071CEB57B9A80FD98B9EDC9B3B313386EF7539A01992CC6E15105EAFA01D0613262234044E4A67814D6F3CC81BB14B8C5E0FA30DBAC13E7972B9D83F65C0C2D4B3A01393841B1D50C3C9387226F1E6FA46CE27D0681A96C3FF5F005085D22F0F8A05FA77E7E9E309951295C63A0FED422B97770D46DF5FF3ED7BD9049C64919E4F5FC6FD10028202110E7C6C825BCEF737147FF7327401CFA9D6CB5BAFAF5057EA1343D738C26F58DD0E9FCAF8D49DEBB56E93ACBFB7CEB66CA31D81CFB5A242BD794955E7AFB4F11D39DC8D5ED18E600AEDEDA2237BA4ED3126BADB44584630D1E875C8C4551A091D8D1CB446C7CF9A3F094D64BFFFC13F4CFC0E04BA99F840D86108922DDF0A244C3576CFE5358A1E58AA79DA51AC70F76F2816D0163510BB5656B9EC39FF0EF7FED379564A1B2481573B55C20BA68C1E491A269031E6271432A6F92882A7CFB727203280787DE6C8C60A7E7759A323FFD920D54AA272117569F335E8E1605780FF684156F8CDAD6040DC99A56069F4B4C0DC014729D39DBFAC466E1B530668873A56C36078AE3836E7A96DC1025B394513E61A5E6A91EFFACBC87214F748CB3D383134428CA8AA32C6BA6C8150F49E8F721EE36B0C5599408BBF233638D658C9C39FFE13DCF57C7792400C89780A92334387FA46EF976B74ECDB95AAC86737DBB041501354371313925B84
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Thonburi cguidfix
/F1.1/Thonburi renmfont
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /guillemotleft put
dup 34 /guillemotright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<





B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/guillemotleft 1 def
/guillemotright 2 def
/u20B8 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94CF017316529A80F552C33559AB2C21302561FE61E935C1E32B3C98FAD5EE6DEF8E2A946709BA3E02871DE2815743DB8E498E69E94CB8A7501EED33553FB0969440DDC44F6C8FF2DBE00656FA8545D720AB78CDD5DB83A2D48C3AD2971DD31E5B673421C2D4B8AAD524BBD63AB7EEB5381F692AEC7D203B56FA27BEF8058A9578C2AD24C8A8CE4B143514AC31C0D63C0BE43ABB2BF4DC01E499FDFF747260858B9CF32D6154B09FEA1AD8E1C7E4809979FA7093D42722F9A8425830694176228F1B4C328DEC8C5FE3EC25BB39DF6A4E613ECA6D9C66ED690D8E4C3B01785445E8CAB71F7F8A146AC1D054AA3DEAD98AB2AB691044260AAA14DE9506530AB7BC542F568E8D50411E2B8FD2B0854F7050B0592C4D63E7515F72B07F6F599A5FD115166AC57C6C63FD04FE354362780C8B8FEF909DE8C56C63F894735D9D0FE539D59D8C3A696A6E774D3B500D45A16D0409F4C8AA9615E6AFAFC355CE062090C75AA4541637688BE503B0195154A1A8DE59D681EF1012B0CA8ABBA1D40EC847BFBDD57CBFCE55536F5BC0E816C6C59AB607A45A5D9AD44EB86FCF2D107147E381F6FB9FDA9A32BEDB1510D71DFDB516C7287E0B9AC8A6570592A8BACB71D4AC34CED06DA82683650661F3CAAAE5888A323A08E627C291
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F2.1/Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 416.25 600.25 rc
-1121.875 1200.125 m
1164.125 1200.125 l
1164.125 -995.875 l
-1121.875 -995.875 l
h
-1121.875 1200.125 m
f
179.125 507.125 m
367.125 507.125 l
369.88641 507.125 372.125 504.88641 372.125 502.125 c
372.125 476.125 l
372.125 473.36359 369.88641 471.125 367.125 471.125 c
179.125 471.125 l
176.36357 471.125 174.125 473.36359 174.125 476.125 c
174.125 502.125 l
174.125 504.88641 176.36357 507.125 179.125 507.125 c
h
179.125 507.125 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1301 693 m
1489 693 l
1491.7615 693 1494 695.23859 1494 698 c
1494 724 l
1494 726.76141 1491.7615 729 1489 729 c
1301 729 l
1298.2385 729 1296 726.76141 1296 724 c
1296 698 l
1296 695.23859 1298.2385 693 1301 693 c
h
1301 693 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 273.125 489.125 cm
/F1.1[ 14 0 0 -14 0 0]sf
-64.588669 5.5323792 m
(!"#"$%&'\(\)%"*%\)+,%-)[ 8.482031 8.060938 3.286719 8.060938 7.634375 6.207031 3.286719 8.170312 8.536719 4.648437 6.207031 8.060938 7.131250 6.207031 4.648438 8.427344 7.743750 6.207031 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
12.125 588.125 m
165.125 588.125 l
165.125 543.125 l
12.125 543.125 l
h
12.125 588.125 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1134 612 m
1287 612 l
1287 657 l
1134 657 l
h
1134 612 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 88.625 565.625 cm
/F2.1[ 12 0 0 -12 0 0]sf
-33.664452 -4.8684387 m
(!)s
/F1.1[ 12 0 0 -12 0 0]sf
-26.990625 -4.8684387 m
(.,%,/,*")[ 8.409375 6.637500 5.320312 6.637500 7.317188 6.637500 6.112500 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
26.990625 -4.8684387 m
(")s
/F1.1[ 14 0 0 -14 0 0]sf
-60.528126 13.933197 m
(01,+-\)&'2314,%&3'\))[ 9.439062 5.408594 7.743750 8.427344 8.170312 4.648438 3.286719 8.170312 5.463281 8.482031 5.408594 12.517969 7.743750 6.207031 3.286719 8.482031 8.170313 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1210.5 657 m
1210.5 668.90002 l
1210.5 711 l
1296 711 l
1284.1 711 l
1286.1 711 l
S
0 i
CM
172.22501 489.125 m
164.22501 492.125 l
164.22501 486.125 l
h
172.22501 489.125 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1294.1 711 m
1286.1 708 l
1286.1 714 l
h
1294.1 711 m
S
CM
278.5697 567.86969 m
281.57675 564.86267 281.57675 559.9873 278.5697 556.98029 c
275.56268 553.97321 270.68732 553.97321 267.6803 556.98029 c
264.67325 559.9873 264.67325 564.86267 267.6803 567.86969 c
270.68732 570.87677 275.56268 570.87677 278.5697 567.86969 c
f
1 J
1 j
0.60000002 i
1 0 0 -1 -1121.875 1200.125 cm
1400.4447 632.25531 m
1403.4518 635.26233 1403.4518 640.1377 1400.4447 643.14471 c
1397.4376 646.15179 1392.5624 646.15179 1389.5553 643.14471 c
1386.5482 640.1377 1386.5482 635.26233 1389.5553 632.25531 c
1392.5624 629.24823 1397.4376 629.24823 1400.4447 632.25531 c
S
1395 645.40002 m
1395 683.09998 l
S
0 i
CM
273.125 509.02499 m
276.125 517.02502 l
270.125 517.02502 l
h
273.125 509.02499 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1395 691.09998 m
1398 683.09998 l
1392 683.09998 l
h
1395 691.09998 m
S
1 1 1 sc
CM
179.125 390.125 m
367.125 390.125 l
369.88641 390.125 372.125 387.88641 372.125 385.125 c
372.125 350.125 l
372.125 347.36359 369.88641 345.125 367.125 345.125 c
179.125 345.125 l
176.36357 345.125 174.125 347.36359 174.125 350.125 c
174.125 385.125 l
174.125 387.88641 176.36357 390.125 179.125 390.125 c
h
179.125 390.125 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1301 810 m
1489 810 l
1491.7615 810 1494 812.23859 1494 815 c
1494 850 l
1494 852.76141 1491.7615 855 1489 855 c
1301 855 l
1298.2385 855 1296 852.76141 1296 850 c
1296 815 l
1296 812.23859 1298.2385 810 1301 810 c
h
1301 810 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 273.125 367.625 cm
-60.81797 -3.9352417 m
(5',#67&'\(\)4"%-38\))[ 10.177344 8.170313 7.743750 3.286719 8.006250 7.743750 3.286719 8.170313 8.536719 4.648438 12.517969 8.060938 6.207031 8.170313 8.482031 8.427344 0.000000 ] xS
-31.357813 15 m
(*&\(',%91")[ 7.131250 3.286719 8.536719 8.170313 7.743750 6.207031 8.170313 5.408594 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1395 729 m
1296.6335 752.2973 l
S
0 i
CM
166.97385 445.98395 m
175.44989 444.90842 l
174.06709 450.74692 l
h
166.97385 445.98395 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1288.8489 754.14105 m
1297.325 755.21655 l
1295.9421 749.37811 l
h
1288.8489 754.14105 m
S
1 J
1 j
0.60000002 i
1395 855 m
1395.2448 908.1001 l
S
0 i
CM
273.40665 284.02499 m
276.36975 292.03873 l
270.36981 292.01108 l
h
273.40665 284.02499 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1395.2816 916.10004 m
1398.2448 908.0863 l
1392.2449 908.11395 l
h
1395.2816 916.10004 m
S
/Cs2 SC
0 sc
1 0 0 -1 339.625 313.625 cm
-61.206249 5.5323792 m
(:'+9%\)8,%,\)834,&')[ 3.390625 8.170313 8.427344 8.170312 6.207031 4.648438 8.427344 7.743750 6.207031 7.743750 4.648438 8.427344 8.482031 12.517969 7.743750 3.286719 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
39.125 336.125 m
165.125 336.125 l
165.125 291.125 l
39.125 291.125 l
h
39.125 336.125 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1161 864 m
1287 864 l
1287 909 l
1161 909 l
h
1161 864 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 102.125 313.625 cm
/F2.1[ 12 0 0 -12 0 0]sf
-33.664452 -4.8684387 m
(!)s
/F1.1[ 12 0 0 -12 0 0]sf
-26.990625 -4.8684387 m
(.,%,/,*")[ 8.409375 6.637500 5.320312 6.637500 7.317188 6.637500 6.112500 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
26.990625 -4.8684387 m
(")s
/F1.1[ 14 0 0 -14 0 0]sf
-34.182423 13.933197 m
(;3'*%,'%*)[ 9.121875 8.482031 8.170312 7.131250 6.207031 7.743750 8.170313 6.207031 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
179.125 264.125 m
367.125 264.125 l
369.88641 264.125 372.125 261.88641 372.125 259.125 c
372.125 224.125 l
372.125 221.36357 369.88641 219.125 367.125 219.125 c
179.125 219.125 l
176.36357 219.125 174.125 221.36357 174.125 224.125 c
174.125 259.125 l
174.125 261.88641 176.36357 264.125 179.125 264.125 c
h
179.125 264.125 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1301 936 m
1489 936 l
1491.7615 936 1494 938.23859 1494 941 c
1494 976 l
1494 978.76141 1491.7615 981 1489 981 c
1301 981 l
1298.2385 981 1296 978.76141 1296 976 c
1296 941 l
1296 938.23859 1298.2385 936 1301 936 c
h
1301 936 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 273.125 241.625 cm
-63.751953 5.5323792 m
(<,'834\)&'+9%\)8,%,)[ 8.482031 7.743750 8.170313 8.427344 8.482031 12.517969 4.648438 3.286719 8.170312 8.427344 8.170312 6.207031 4.648438 8.427344 7.743750 6.207031 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
259.91541 282.125 m
286.91541 282.125 l
286.91541 264.125 l
259.91541 264.125 l
h
259.91541 282.125 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1381.7904 918 m
1408.7904 918 l
1408.7904 936 l
1381.7904 936 l
h
1381.7904 918 m
S
0 i
1 1 1 sc
CM
156.125 250.625 m
174.125 250.625 l
174.125 232.625 l
156.125 232.625 l
h
156.125 250.625 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1278 949.5 m
1296 949.5 l
1296 967.5 l
1278 967.5 l
h
1278 949.5 m
S
1395 981 m
1394.7401 1034.1001 l
S
0 i
CM
272.82593 158.02498 m
275.86505 166.01019 l
269.86511 166.03957 l
h
272.82593 158.02498 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1394.7009 1042.1 m
1397.74 1034.1147 l
1391.7401 1034.0854 l
h
1394.7009 1042.1 m
S
/Cs2 SC
0 sc
1 0 0 -1 313.125 187.625 cm
-35 5.5323792 m
(:'+9%\)8,%,)[ 3.390625 8.170313 8.427344 8.170312 6.207031 4.648438 8.427344 7.743750 6.207031 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
179.125 138.125 m
367.125 138.125 l
369.88641 138.125 372.125 135.88643 372.125 133.125 c
372.125 98.125 l
372.125 95.363579 369.88641 93.125 367.125 93.125 c
179.125 93.125 l
176.36357 93.125 174.125 95.363579 174.125 98.125 c
174.125 133.125 l
174.125 135.88643 176.36357 138.125 179.125 138.125 c
h
179.125 138.125 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1301 1062 m
1489 1062 l
1491.7615 1062 1494 1064.2385 1494 1067 c
1494 1102 l
1494 1104.7615 1491.7615 1107 1489 1107 c
1301 1107 l
1298.2385 1107 1296 1104.7615 1296 1102 c
1296 1067 l
1296 1064.2385 1298.2385 1062 1301 1062 c
h
1301 1062 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 273.125 115.625 cm
-73.844528 5.5323792 m
(0"'"1,%&'\(\)%"*%\)$,*"*)[ 9.439063 8.060938 8.170313 8.060937 5.408594 7.743750 6.207031 3.286719 8.170313 8.536719 4.648438 6.207031 8.060938 7.131250 6.207031 4.648438 7.634375 7.743750 7.131250 8.060937 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
259.31662 156.125 m
286.31662 156.125 l
286.31662 138.125 l
259.31662 138.125 l
h
259.31662 156.125 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1381.1917 1044 m
1408.1917 1044 l
1408.1917 1062 l
1381.1917 1062 l
h
1381.1917 1044 m
S
0 i
1 1 1 sc
CM
156.125 124.625 m
174.125 124.625 l
174.125 106.625 l
156.125 106.625 l
h
156.125 124.625 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1278 1075.5 m
1296 1075.5 l
1296 1093.5 l
1278 1093.5 l
h
1278 1075.5 m
S
1224 909 m
1224 920.90002 l
1224 958.5 l
1278 958.5 l
1266.1 958.5 l
1268.1 958.5 l
S
0 i
CM
154.22501 241.625 m
146.22501 244.625 l
146.22501 238.625 l
h
154.22501 241.625 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1276.1 958.5 m
1268.1 955.5 l
1268.1 961.5 l
h
1276.1 958.5 m
S
1 1 1 sc
CM
39.125 453.125 m
165.125 453.125 l
165.125 408.125 l
39.125 408.125 l
h
39.125 453.125 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1161 747 m
1287 747 l
1287 792 l
1161 792 l
h
1161 747 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 102.125 430.625 cm
/F2.1[ 12 0 0 -12 0 0]sf
-33.664452 -4.8684387 m
(!)s
/F1.1[ 12 0 0 -12 0 0]sf
-26.990625 -4.8684387 m
(.,%,/,*")[ 8.409375 6.637500 5.320312 6.637500 7.317188 6.637500 6.112500 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
26.990625 -4.8684387 m
(")s
/F1.1[ 14 0 0 -14 0 0]sf
-36.345314 13.933197 m
(="*%\)+,%-*)[ 8.963281 8.060937 7.131250 6.207031 4.648438 8.427344 7.743750 6.207031 8.170313 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1287 784.42108 m
1385.3665 807.71838 l
S
0 i
CM
271.27615 390.5629 m
264.18289 395.32587 l
262.80011 389.48737 l
h
271.27615 390.5629 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1393.1511 809.56213 m
1386.0579 804.79913 l
1384.675 810.63763 l
h
1393.1511 809.56213 m
S
1 J
1 j
0.60000002 i
1161 769.5 m
1134 769.5 l
1134 783 l
1134 1084.5 l
1266.1 1084.5 l
1268.1 1084.5 l
S
0 i
CM
154.22501 115.625 m
146.22501 118.625 l
146.22501 112.625 l
h
154.22501 115.625 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1276.1 1084.5 m
1268.1 1081.5 l
1268.1 1087.5 l
h
1276.1 1084.5 m
S
1 1 1 sc
CM
280.90317 30.903166 m
285.19894 26.607403 285.19894 19.642597 280.90317 15.346834 c
276.60739 11.051048 269.64261 11.051048 265.34683 15.346834 c
261.05106 19.642597 261.05106 26.607403 265.34683 30.903166 c
269.64261 35.198952 276.60739 35.198952 280.90317 30.903166 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -1121.875 1200.125 cm
1402.7782 1169.2218 m
1407.074 1173.5176 1407.074 1180.4824 1402.7782 1184.7782 c
1398.4824 1189.074 1391.5176 1189.074 1387.2218 1184.7782 c
1382.926 1180.4824 1382.926 1173.5176 1387.2218 1169.2218 c
1391.5176 1164.926 1398.4824 1164.926 1402.7782 1169.2218 c
S
0 i
CM
278.5697 28.569715 m
281.57675 25.562681 281.57675 20.687319 278.5697 17.680285 c
275.56268 14.673234 270.68732 14.673234 267.6803 17.680285 c
264.67325 20.687319 264.67325 25.562681 267.6803 28.569715 c
270.68732 31.576767 275.56268 31.576767 278.5697 28.569715 c
f
0.60000002 i
1 0 0 -1 -1121.875 1200.125 cm
1400.4447 1171.5553 m
1403.4518 1174.5624 1403.4518 1179.4376 1400.4447 1182.4447 c
1397.4376 1185.4518 1392.5624 1185.4518 1389.5553 1182.4447 c
1386.5482 1179.4376 1386.5482 1174.5624 1389.5553 1171.5553 c
1392.5624 1168.5482 1397.4376 1168.5482 1400.4447 1171.5553 c
S
1395 1107 m
1395 1156.1 l
S
0 i
CM
273.125 36.025005 m
276.125 44.025005 l
270.125 44.025005 l
h
273.125 36.025005 m
f
0 J
0 j
1 0 0 -1 -1121.875 1200.125 cm
1395 1164.1 m
1398 1156.1 l
1392 1156.1 l
h
1395 1164.1 m
S
ep
end
%%Trailer
%%EOF
